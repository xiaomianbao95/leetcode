给定一个没有重复数字的序列，返回其所有可能的全排列。
示例:

输入: [1,2,3]
输出:
[
  [1,2,3],
  [1,3,2],
  [2,1,3],
  [2,3,1],
  [3,1,2],
  [3,2,1]
]

分析：运用递归，
import java.util.*;
class Solution {
    List<List<Integer>> res=new ArrayList<List<Integer>>(); 
    public List<List<Integer>> permute(int[] nums) {
        
        if(nums==null||nums.length==0)
            return res;
         return permute2(nums,0);  
       
    }
    public List<List<Integer>> permute2(int[] nums,int i){
        
        if(i==nums.length){
            List<Integer> list=new ArrayList<Integer>();
            for(int num:nums){
                list.add(num);
            }
              res.add(list); 
            return res;
            
        }else{
            for(int j=i;j<nums.length;j++){
                int temp1=nums[i];nums[i]=nums[j];nums[j]=temp1;//两个位置数交换
                permute2(nums,i+1);//处理第i+1位及其之后的各位
                int temp2=nums[i];nums[i]=nums[j];nums[j]=temp2;//之前交换的两个数回到原位
            }
        }
        return res;
    }
}
