验证给定的字符串是否可以解释为十进制数字。

例如:

"0"?=>?true
" 0.1 "?=>?true
"abc"?=>?false
"1 a"?=>?false
"
2e10"?=>?true
" -90e3? ?"?=>?true
" 1e"?=>?false
"e3"?=>?false
" 6e-1"?=>?true
" 99e2.5?"?=>?false
"
53.5e93"?=>?true
" --6 "?=>?false
"-+3"?=>?false
"95a54e53"?=>?false

说明:?我们有意将问题陈述地比较模糊。
在实现代码之前，你应当事先思考所有可能的情况。这里给出一份可能存在于有效十进制数字中的字符列表：

数字 0-9
指数 
- "e"
正/负号 - "+"/"-"
小数点 - "."



class Solution {
    public boolean isNumber(String s) {
        String s1=s.trim();
        if(s1==null||s1.length()==0)
            return false;
        int flag1=0;
        int flag2=0;
         int len=s1.length();
        if(s1.charAt(0)=='.'&&len==1)//'.'为false
            return false;       
        for(int i=0;i<len;i++){
            if(s1.charAt(i)=='+'||s1.charAt(i)=='-'){
                if(i>0&&s1.charAt(i-1)!='e')
                    return false;
                if(i==(len-1))//以+/-结尾为false比如:'4e+'
                    return false;
                
            }else if(s1.charAt(i)=='.'){
                flag1++;
                if(flag1>1||flag2!=0)
                    return false;
                if(i==(len-1)&&(s1.charAt(i-1)=='-'||s1.charAt(i-1)=='+'||s1.charAt(i-1)=='e'))//以'.'结尾并且前面为'+'/'-'/'e'为flase,
                    return false;
                
            }else if(s1.charAt(i)=='e'){
                flag2++;
                if(i==0)//'e' 为false
                    return false;
                if(flag2>1)
                    return false;
                if(i==(len-1))//以'e'结尾为false
                    return false;
                if(i>0&&(s1.charAt(i-1)=='.'||s1.charAt(i-1)=='+'||s1.charAt(i-1)=='-')&&(i-1)==0)//'e'前面为'.'/'+/'-'并且'.'/'+/'-'是第一个字符
                    return false;
                
            }else if(s1.charAt(i)<'0'||s1.charAt(i)>'9'){
                return false;
            }
        }
        return true;
        
        
    }
}